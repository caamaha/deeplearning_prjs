name: "natural_cae"

input: "noisy_data"
input_dim: 1
input_dim: 3
input_dim: 64
input_dim: 64

input: "data"
input_dim: 1
input_dim: 3
input_dim: 64
input_dim: 64

layer {
  name: "flatdata"
  type: "Flatten"
  bottom: "data"
  top: "flatdata"
}

layer {
	name: "encode1"
	type: "Convolution"
	bottom: "noisy_data"
	top: "encode1"
	param {
		lr_mult: 1.0
		#decay_mult: 1
	}
	param {
		lr_mult: 1.0
		#decay_mult: 0
	}
	convolution_param {
		num_output: 100
		kernel_size: 7
		pad: 6
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu1"
	type: "ReLU"
	bottom: "encode1"
	top: "encode1"
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "encode1"
	top: "pool1"
	pooling_param {
		pool: MAX
		kernel_size: 2
		stride: 1
	}
}

layer {
	name: "unpool1"
	type: "Deconvolution"
	bottom: "pool1"
	top: "unpool1"
	convolution_param {
		kernel_size: 2
		stride: 1
		num_output: 100
		group: 100
		weight_filter: { type: "bilinear" }
		bias_term: false
	}
	param {
		lr_mult: 0
		decay_mult: 0
	}
}


layer {
	name: "decode1"
	type: "Convolution"
	bottom: "unpool1"
	top: "decode1"
	param {
		lr_mult: 1.0
		#decay_mult: 1
	}
	param {
		lr_mult: 1.0
		#decay_mult: 0
	}
	convolution_param {
		num_output: 3
		kernel_size: 7
		pad: 0
		stride: 1
		weight_filler {
			type: "gaussian"
			std: 0.01
		}
		bias_filler {
			type: "constant"
			value: 0
		}
	}
}

layer {
	name: "relu2"
	type: "ReLU"
	bottom: "decode1"
	top: "decode1"
}

layer {
	name: "flatdecode"
	type: "Flatten"
	bottom: "decode1"
	top: "flatdecode"
}

layer {
	name: "loss2"
	type: "EuclideanLoss"
	bottom: "flatdata"
	bottom: "flatdecode"
	top: "l2_error"
	loss_weight: 1
}


